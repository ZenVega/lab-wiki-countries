[{"/Users/steffenleppin/practice/lab-wiki-countries/src/index.js":"1","/Users/steffenleppin/practice/lab-wiki-countries/src/App.js":"2","/Users/steffenleppin/practice/lab-wiki-countries/src/components/Navbar.jsx":"3","/Users/steffenleppin/practice/lab-wiki-countries/src/components/CountryDetails.jsx":"4","/Users/steffenleppin/practice/lab-wiki-countries/src/components/CountriesList.jsx":"5"},{"size":261,"mtime":1624635258832,"results":"6","hashOfConfig":"7"},{"size":984,"mtime":1624637949653,"results":"8","hashOfConfig":"7"},{"size":130,"mtime":1624635258829,"results":"9","hashOfConfig":"7"},{"size":645,"mtime":1624639623596,"results":"10","hashOfConfig":"7"},{"size":469,"mtime":1624638717508,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"13yt715",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"14"},"/Users/steffenleppin/practice/lab-wiki-countries/src/index.js",[],["25","26"],"/Users/steffenleppin/practice/lab-wiki-countries/src/App.js",["27"],"import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n\nimport { Navbar } from './components/Navbar';\nimport { CountriesList } from './components/CountriesList';\nimport { CountryDetails } from './components/CountryDetails';\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get('https://restcountries.eu/rest/v2/all')\n      .then((data) => setCountries(data.data))\n      .catch((err) => console.log(err));\n    return () => {\n      setCountries([]);\n    };\n  }, []);\n\n  return (\n    <Router>\n      <Navbar />\n      <div className=\"flex\">\n        <CountriesList countries={countries} />\n\n        \n        <Switch>\n          <Route exact path={'/country/:countryId'}>\n            <CountryDetails countries={countries} />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/steffenleppin/practice/lab-wiki-countries/src/components/Navbar.jsx",[],"/Users/steffenleppin/practice/lab-wiki-countries/src/components/CountryDetails.jsx",["28","29","30","31","32"],"/Users/steffenleppin/practice/lab-wiki-countries/src/components/CountriesList.jsx",["33"],"import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const CountriesList = ({ countries }) => {\n  const countryList = countries.map((country) => (\n    <div key={country.alpha3Code}>\n      <Link to={`/country/${country.alpha3Code}`}>\n        <img src={country.flag} alt={`Flag of ${country.name}`} />\n        <h1>{country.name}</h1>\n      </Link>\n    </div>\n  ));\n\n  return <div className=\"country-container\">{countryList}</div>;\n};\n",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":4,"column":50,"nodeType":"40","messageId":"41","endLine":4,"endColumn":54},{"ruleId":"38","severity":1,"message":"42","line":3,"column":20,"nodeType":"40","messageId":"41","endLine":3,"endColumn":26},{"ruleId":"38","severity":1,"message":"43","line":4,"column":3,"nodeType":"40","messageId":"41","endLine":4,"endColumn":9},{"ruleId":"38","severity":1,"message":"44","line":5,"column":3,"nodeType":"40","messageId":"41","endLine":5,"endColumn":8},{"ruleId":"38","severity":1,"message":"39","line":6,"column":3,"nodeType":"40","messageId":"41","endLine":6,"endColumn":7},{"ruleId":"45","severity":1,"message":"46","line":17,"column":6,"nodeType":"47","endLine":17,"endColumn":17,"suggestions":"48"},{"ruleId":"38","severity":1,"message":"49","line":1,"column":17,"nodeType":"40","messageId":"41","endLine":1,"endColumn":25},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'countries'. Either include it or remove the dependency array. If 'setCountry' needs the current value of 'countries', you can also switch to useReducer instead of useState and read 'countries' in the reducer.","ArrayExpression",["52"],"'Fragment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"53","fix":"54"},"Update the dependencies array to be: [countries, countryId]",{"range":"55","text":"56"},[411,422],"[countries, countryId]"]